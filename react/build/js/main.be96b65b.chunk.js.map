{"version":3,"sources":["Home.js","lobby.js","UserContext.js","test1.js","App.js","reportWebVitals.js","index.js"],"names":["Home","props","state","didGetUserName","inputText","enterUserName","typedText","textArea","current","value","setState","pushToLobby","history","push","React","createRef","this","id","ref","onInput","onClick","setUserName","console","log","Component","withRouter","Lobby","lobbies","lobbyName","lobbyDesc","lobbyID","map","lobby","index","renderTableData","UserContext","createContext","Test1","try","event","target","userName","App","useState","Provider","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.be96b65b.chunk.js","sourcesContent":["import React, { useContext } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport Test1 from './test1'\r\nimport './App.css';\r\n\r\nclass Home extends React.Component {\r\n  state = {\r\n    didGetUserName: true,\r\n    inputText: \"\"\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.textArea = React.createRef();\r\n  }\r\n\r\n  enterUserName = () => {\r\n    const typedText = this.textArea.current.value\r\n  \r\n    this.setState({\r\n      inputText: typedText\r\n    })\r\n  }\r\n\r\n  pushToLobby = () => {\r\n    this.props.history.push('/test1');\r\n  }\r\n\r\n  render() { \r\n    const didGetUserName = this.state.didGetUserName;\r\n    if (didGetUserName){\r\n    }\r\n    return (\r\n        <div id=\"App\">\r\n        <head>\r\n          <title>SiGaL Index</title>\r\n        </head>\r\n          <body>\r\n            <div id=\"banner\">\r\n              <h1>\r\n                Sigal.io\r\n              </h1>\r\n            </div>\r\n            <p id=\"description\">\r\n              Sigal.io is a site where you can create and join and create lobbies with your favorite board games. More description here.\r\n              Once you enter a nickname and click submit, you can either\r\n              look for a lobby that someone has created through a game ID or create your own lobby. To set up a lobby, you will need to upload game code and also enter a description.  \r\n            </p>\r\n            <h1 id=\"inputDescription\">Insert Nickname</h1>\r\n            <input \r\n                  id=\"inputText\" \r\n                  ref = {this.textArea}\r\n                  onInput={this.enterUserName}></input>\r\n            <button \r\n                  id=\"submit\"//this.pushToLobby \r\n                  onClick= {() =>{\r\n                    this.props.setUserName(this.state.inputText)\r\n                    console.log(this.state.inputText)\r\n                    this.pushToLobby()\r\n                  }}\r\n            >Submit</button>\r\n          </body>\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(Home);","import React from 'react';\r\nimport Home from './Home.js';\r\n\r\n\r\nclass Lobby extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state ={\r\n            lobbies: [\r\n                {lobbyName: 'lobby1', lobbyDesc: 'asdf', lobbyID: 123 },\r\n                {lobbyName: 'lobby2', lobbyDesc: 'zxcv', lobbyID: 456 }\r\n            ]\r\n        }\r\n    }\r\n\r\n\r\n    renderTableData() {\r\n        return this.state.lobbies.map((lobby, index) => {\r\n            const {lobbyName, lobbyDesc, lobbyID } = lobby\r\n            return (\r\n                <tr key={lobbyID}>\r\n                    <td>{lobbyName}</td>\r\n                    <td>{lobbyDesc}</td>\r\n                    <td>{lobbyID}</td>\r\n                </tr>\r\n            )\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div>\r\n            <h2>\r\n                Hello {}\r\n            </h2>\r\n            <h1>Testing Lobbies Table</h1>\r\n            <table id='lobbies'>\r\n                <tbody>\r\n                    {this.renderTableData()}\r\n                </tbody>\r\n            </table>\r\n            <div>\r\n        <div>\r\n            <title>\r\n                SiGaL Lobby\r\n            </title>\r\n            <div id=\"nameBox\">\r\n                <h1>\r\n                    Welcome\r\n                </h1>\r\n                <button onClick=\"createRandomLobby()\">Create Random Lobby</button>\r\n            </div>\r\n            <div>\r\n                <template id=\"temp\">\r\n                    <tr id=\"rowTemplate\">\r\n                        <td></td>\r\n                        <td></td>\r\n                        <td></td>\r\n                        <td></td>\r\n                        <td><button onClick=\"joinLobby(this)\">Join Now</button></td>\r\n                    </tr>\r\n                </template>\r\n            </div>\r\n            <div>\r\n                <table id=\"lobbiesTable\">\r\n                    <tr>\r\n                        <th>Host</th>\r\n                        <th>Lobby Name</th>\r\n                        <th>Lobby Description</th>\r\n                        <th>Lobby ID</th>\r\n                        <th></th>\r\n                    </tr>\r\n                </table>\r\n            </div>\r\n        </div>         \r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Lobby","import { createContext } from 'react';\r\n\r\nexport const UserContext = createContext(null);","import React , {useContext} from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport Lobby from './lobby';\r\nimport { UserContext } from './UserContext';\r\n\r\nclass Test1 extends React.Component {\r\n    state = {\r\n        inputText: ''\r\n    }\r\n\r\n    handleInputChanged (event) {\r\n        this.setState({value: event.target.value});\r\n    }\r\n\r\n    try = () => {\r\n        this.props.history.push('/lobby');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {console.log(this.state.inputText)}\r\n                {console.log(\"Hello\")}\r\n                {console.log(this)}\r\n                <div>\r\n                    Nickname is : {this.props.userName}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(Test1);\r\n","import React, { useState } from 'react';\nimport Test1 from './test1';\nimport Lobby from './lobby';\nimport Home from './Home';\nimport {UserContext} from './UserContext'\nimport { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom';\nimport './App.css';\n\nfunction App () {\n  const [userName, setUserName] = useState('')\n\n  return (\n      <Router>\n        <div>\n        <UserContext.Provider value={{userName, setUserName}}>\n          <Switch>\n            <Route exact path=\"/\">\n              <Home setUserName = {setUserName}/>\n            </Route>\n            <Route path=\"/Test1\">\n              <Test1 userName = {userName}/>\n            </Route>\n            <Route path=\"/Lobby\">\n              <Lobby userName = {userName}/>\n            </Route>\n          </Switch>\n          </UserContext.Provider>\n        </div>\n      </Router>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}